"use strict";
//import {path} from 'path';
var fs = require('fs');
var fse = require('fs-extra');
var path = require('path');
var browserify = require('browserify');
var tsify = require('tsify');
var ts = require('typescript');
var fgMgr_1 = require('./fgMgr');
var serverUtils = require('./serverUtils');
var fgLibPath = path.dirname(require.resolve('fg-js')) + '/';
function getSubDirs(srcpath) {
    return fs.readdirSync(srcpath).filter(function (file) {
        return fs.statSync(path.join(srcpath, file)).isDirectory();
    })
        .map(function (path) {
        return srcpath + '/' + path;
    });
}
;
//readGapDirs(gapsDir);
function load(fgMgr, name, dirPath) {
    var sources = {};
    var jadePath = dirPath + '/tpl.jade';
    if (serverUtils.fileExist(jadePath)) {
        var jadeCode = fs.readFileSync(jadePath).toString();
        sources.tpl = jadeCode;
    }
    ;
    var classJsPath = dirPath + '/class.js';
    if (serverUtils.fileExist(classJsPath)) {
        var code = fs.readFileSync(classJsPath).toString();
        sources.classFn = code;
    }
    ;
    var subDirs = serverUtils.getSubFolders(dirPath);
    subDirs.forEach(function (subPath) {
        var childName = name + '-' + subPath;
        var childPath = dirPath + '/' + subPath;
        load(fgMgr, childName, childPath);
    });
    fgMgr.readFg(name, sources);
}
exports.load = load;
;
function loadDir(fgMgr, path) {
    var subDirs = serverUtils.getSubFolders(path);
    subDirs.forEach(function (subPath) {
        var childName = subPath;
        var childPath = path + '/' + subPath;
        load(fgMgr, childName, childPath);
    });
}
exports.loadDir = loadDir;
;
function buildTest(cb) {
    var testDir = fgLibPath + '/tests/';
    buildRuntime(testDir + '/build/runtime.js', function (err) {
        if (err) {
            cb(err);
            return;
        }
        ;
        build(testDir + '/fg-src/', testDir + '/build/fg.js', function (err) {
            cb(err);
        });
    });
}
exports.buildTest = buildTest;
;
function buildRuntime(destPath, cb) {
    var brofy = browserify({
        debug: true
    });
    brofy
        .add(fgLibPath + '/../src/client/main.ts')
        .plugin(tsify)
        .bundle(function (err, code) {
        if (err) {
            console.error(err);
            return;
        }
        ;
        fs.writeFileSync(destPath, code);
        cb(null);
    });
}
exports.buildRuntime = buildRuntime;
;
var includeWrap = [
    "var fgs = [];\n\n",
    "\n\n$fg.load(fgs);"
];
var includeFgCode = "fgs.push({\n\t\"name\": \"%name%\",\n\t\"tpl\": %tpl%,\n\t\"classFn\": %classFn%\n});";
function build(srcPath, destPath, cb) {
    var fgMgr = new fgMgr_1.FgMgr();
    loadDir(fgMgr, srcPath);
    //var tempPath = path.resolve(fgLibPath, './temp');	
    var tempPath = path.resolve(process.cwd(), './temp');
    fse.emptyDirSync(tempPath);
    var includeCodeParts = [];
    for (var i in fgMgr.fgs) {
        var fg = fgMgr.fgs[i];
        var fgPath = tempPath + '/' + fg.name;
        fs.mkdirSync(fgPath);
        if (fg.classFn) {
            var classCode = 'module.exports = ' + fg.classFn.toString();
            fs.writeFileSync(fgPath + '/class.js', classCode);
        }
        ;
        var tplCode = 'module.exports = ' + serverUtils.toJs(fg.tpl);
        fs.writeFileSync(fgPath + '/tpl.js', tplCode);
        includeCodeParts.push(includeFgCode
            .replace('%name%', fg.name)
            .replace('%tpl%', 'require("./' + fg.name + '/tpl.js")')
            .replace('%classFn%', fg.classFn
            ? 'require("./' + fg.name + '/class.js")'
            : null));
    }
    ;
    var includeCode = includeWrap.join(includeCodeParts.join('\n'));
    var includePath = tempPath + '/' + 'include.js';
    fs.writeFileSync(includePath, includeCode);
    var brofy = browserify({
        debug: true
    });
    brofy
        .plugin(tsify)
        .add(includePath).bundle(function (err, code) {
        if (err) {
            console.error(err);
            return;
        }
        ;
        fs.writeFileSync(destPath, code);
        cb(null);
    });
    ts.transpileModule(includeCode, {
        compilerOptions: {
            module: ts.ModuleKind.System,
            outFile: destPath,
            sourceRoot: tempPath
        }
    });
    //fs.writeFileSync(destPath, fgMgr.genClientMeta());	
    //cb(null);
}
exports.build = build;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWSxDQUFDO0FBRWIsNEJBQTRCO0FBRTVCLElBQVksRUFBRSxXQUFNLElBQUksQ0FBQyxDQUFBO0FBQ3pCLElBQVksR0FBRyxXQUFNLFVBQVUsQ0FBQyxDQUFBO0FBQ2hDLElBQVksSUFBSSxXQUFNLE1BQU0sQ0FBQyxDQUFBO0FBRTdCLElBQVksVUFBVSxXQUFNLFlBQVksQ0FBQyxDQUFBO0FBQ3pDLElBQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUMvQixJQUFZLEVBQUUsV0FBTSxZQUFZLENBQUMsQ0FBQTtBQUNqQyxzQkFBb0MsU0FBUyxDQUFDLENBQUE7QUFDOUMsSUFBWSxXQUFXLFdBQU0sZUFBZSxDQUFDLENBQUE7QUFFN0MsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO0FBRS9ELG9CQUFvQixPQUFlO0lBQ2xDLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFTLElBQUk7UUFDbEQsTUFBTSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1RCxDQUFDLENBQUM7U0FDRCxHQUFHLENBQUMsVUFBUyxJQUFJO1FBQ2pCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsR0FBRyxHQUFHLElBQUksQ0FBQztJQUM3QixDQUFDLENBQUMsQ0FBQztBQUNKLENBQUM7QUFBQSxDQUFDO0FBQ0YsdUJBQXVCO0FBRXZCLGNBQXFCLEtBQVksRUFBRSxJQUFZLEVBQUUsT0FBZTtJQUMvRCxJQUFJLE9BQU8sR0FBbUIsRUFB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