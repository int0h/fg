module.exports = $fg;
var fgClassModule = require('fg-js/client/fgClass.js');
var fgInstanceModule = require('fg-js/client/fgInstance.js');
;
var $fg = function (arg) {
    if (arg instanceof HTMLElement) {
        return $fg.byDom(arg);
    }
    ;
    if (typeof arg == "string") {
        return fgClassModule.fgClassDict[arg];
    }
    ;
};
$fg.load = function (fgData) {
    if (Array.isArray(fgData)) {
        return fgData.map($fg.load);
    }
    ;
    return new fgClassModule.FgClass(fgData);
};
$fg.isFg = function (domNode) {
    return domNode.classList && domNode.classList.contains('fg');
};
var iidRe = /fg\-iid\-(\d+)/g;
var idRe = /fg\-(\d+)\-gid\-(\d+)/g;
$fg.byDom = function (domNode) {
    if (!domNode || !domNode.className) {
        return null;
    }
    ;
    if (!~domNode.className.split(' ').indexOf('fg')) {
        return null;
    }
    ;
    if (!domNode.id) {
        return null;
    }
    ;
    idRe.lastIndex = 0;
    var res = idRe.exec(domNode.id);
    if (!res) {
        return null;
    }
    ;
    var iid = parseInt(res[1]);
    return fgInstanceModule.getFgByIid(iid);
};
$fg.gapClosest = function (domNode) {
    while (true) {
        idRe.lastIndex = 0;
        var res = idRe.exec(domNode.id);
        if (!res) {
            domNode = domNode.parentNode;
            if (!domNode) {
                return null;
            }
            ;
            continue;
        }
        ;
        var iid = parseInt(res[1]);
        var fg = fgInstanceModule.getFgByIid(iid);
        var gid = parseInt(res[2]);
        return fg.gapStorage.gaps[gid];
    }
    ;
};
$fg.classes = fgClassModule.fgClassDict;
$fg.fgs = fgInstanceModule.fgInstanceTable;
$fg.jq = window['jQuery'];
window['$fg'] = $fg;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC9oZWxwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUM7QUFFckIsSUFBSSxhQUFhLEdBQUcsT0FBTyxDQUFDLHlCQUF5QixDQUFDLENBQUM7QUFDdkQsSUFBSSxnQkFBZ0IsR0FBRyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQztBQUk1RCxDQUFDO0FBRUYsSUFBSSxHQUFHLEdBQVcsVUFBVSxHQUFHO0lBQzlCLEVBQUUsQ0FBQyxDQUFDLEdBQUcsWUFBWSxXQUFXLENBQUMsQ0FBQSxDQUFDO1FBQy9CLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLENBQUM7SUFBQSxDQUFDO0lBQ0YsRUFBRSxDQUFDLENBQUMsT0FBTyxHQUFHLElBQUksUUFBUSxDQUFDLENBQUEsQ0FBQztRQUMzQixNQUFNLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBQUEsQ0FBQztBQUNILENBQUMsQ0FBQztBQUVGLEdBQUcsQ0FBQyxJQUFJLEdBQUcsVUFBUyxNQUFNO0lBQ3pCLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQSxDQUFDO1FBQzFCLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBQUEsQ0FBQztJQUNGLE1BQU0sQ0FBQyxJQUFJLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDMUMsQ0FBQyxDQUFDO0FBRUYsR0FBRyxDQUFDLElBQUksR0FBRyxVQUFTLE9BQU87SUFDMUIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxTQUFTLElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxRQUFR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