"use strict";
var utils = require('../utils');
var valueMgr = require('../valueMgr');
;
var gapClasses = {};
function regGap(gapHandler) {
    gapClasses[gapHandler.name] = gapHandler;
    return gapHandler;
}
exports.regGap = regGap;
;
var Gap = (function () {
    function Gap(context, parsedMeta, parent) {
        utils.extend(this, parsedMeta); // todo: why?
        this.children = [];
        this.parent = parent || null;
        this.root = this;
        this.context = context;
        //this.scopePath = utils.getScopePath(this);
        //this.triggers = [];
        context.gapStorage.reg(this);
        if (this.path) {
            this.resolvedPath = valueMgr.resolvePath(this, this.path);
            if (this.resolvedPath.source === "data") {
                context.gapStorage.setTriggers(this, [this.resolvedPath.path]);
            }
            ;
        }
        ;
        if (!parent) {
            return this;
        }
        ;
        this.root = parent.root;
        parent.children.push(this);
    }
    ;
    Gap.prototype.closest = function (selector) {
        var eid = selector.slice(1);
        var gap = this.parent;
        while (gap) {
            if (gap.eid === eid) {
                return gap;
            }
            ;
            gap = gap.parent;
        }
        ;
        return null;
    };
    ;
    Gap.prototype.data = function (val) {
        if (arguments.length === 0) {
            return utils.objPath(this.scopePath.path, this.context.data);
        }
        ;
        this.context.update(this.scopePath, val);
    };
    ;
    Gap.prototype.findRealDown = function () {
        if (!this.isVirtual) {
            return [this];
        }
        ;
        var res = [];
        this.children.forEach(function (child) {
            res = res.concat(child.findRealDown());
        });
        return res;
    };
    ;
    Gap.prototype.getDom = function () {
        if (!this.isVirtual) {
            var id = ["fg", this.context.id, "gid", this.gid].join('-');
            return [document.getElementById(id)];
        }
        ;
        var res = [];
        this.findRealDown().forEach(function (gap) {
            res = res.concat(gap.getDom());
        });
        return res;
    };
    ;
    Gap.prototype.removeDom = function () {
        var dom = this.getDom();
        dom.forEach(function (elm) {
            if (!elm) {
                return;
            }
            ;
            elm.remove();
        });
    };
    ;
    return Gap;
}());
exports.Gap = Gap;
;
function render(context, parent, data, meta) {
    var gap = new Gap(context, meta, parent);
    var gapClass = gapClasses[meta.type];
    return gapClass.render.call(gap, context, data);
}
exports.render = render;
;
function update(context, gapMeta, scopePath, value, oldValue) {
    var gapClass = gapClasses[gapMeta.type];
    if (!gapClass) {
        return;
    }
    ;
    return gapClass.update(context, gapMeta, scopePath, value, oldValue);
}
exports.update = update;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FwQ2xhc3NNZ3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2xpZW50L2dhcENsYXNzTWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQztBQU1iLElBQVksS0FBSyxXQUFNLFVBQVUsQ0FBQyxDQUFBO0FBQ2xDLElBQVksUUFBUSxXQUFNLGFBQWEsQ0FBQyxDQUFBO0FBSXZDLENBQUM7QUFJRixJQUFJLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFFcEIsZ0JBQXVCLFVBQW9CO0lBQzFDLFVBQVUsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEdBQUcsVUFBVSxDQUFDO0lBQ3pDLE1BQU0sQ0FBQyxVQUFVLENBQUM7QUFDbkIsQ0FBQztBQUhlLGNBQU0sU0FHckIsQ0FBQTtBQUFBLENBQUM7QUFFRjtJQWtCQyxhQUFhLE9BQU8sRUFBRSxVQUFXLEVBQUUsTUFBTztRQUN6QyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLGFBQWE7UUFDN0MsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQzdCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLDRDQUE0QztRQUM1QyxxQkFBcUI7UUFDckIsT0FBTyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBLENBQUM7WUFDZCxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMxRCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sS0FB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