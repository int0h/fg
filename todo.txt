+ path parsing
+ dataset? [solved by dataQuery]
+ data access standardization
+ triggers? too complex [recreated whole update archeticture]
+ data transform
* tests
- class modifications
+ typescripted!
- why GapClass != FgClass?
- for if etc sugar
+ fg class reconsidering (remove fgProto)
+ fix deploying
    + fix test building

- since we dont have instances of gaps we needed to store dynamic path in id (I'm not sure if that 
    is a good idea in general btw), 
    what became a problem in a case of trying to insert some new scope-items in the beggining of the list;
    I suppose the best option (at least for now) is to ignore adding content before content; 
    It's may be not the most optimal way to solve the problem, on the other hand it could probably make 
    some other parts of lib easier to develop. Also I'm not sure if the profit from "unshifting" is significant.